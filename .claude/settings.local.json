{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(flutter analyze:*)",
      "Bash(/usr/bin/flutter analyze)",
      "Bash(chmod:*)",
      "Bash(\"/mnt/e/Flutter Projects - 2025/Sylonow/sylonow_user/analyze.sh\")",
      "Bash(mv:*)",
      "Bash(dart analyze:*)",
      "Bash(rm:*)",
      "mcp__supabase__apply_migration",
      "mcp__supabase__list_tables",
      "mcp__supabase__execute_sql",
      "Bash(flutter packages pub run:*)",
      "Bash(cd:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(bash -c \"cd ''/mnt/e/Flutter Projects - 2025/Sylonow/sylonow_user'' && flutter analyze\")",
      "Bash(/bin/bash -c \"flutter analyze\")",
      "Bash(/mnt/e/flutter/bin/flutter analyze)",
      "Bash(/mnt/e/flutter/bin/flutter packages pub run build_runner build --delete-conflicting-outputs)",
      "Bash(bash:*)",
      "Bash(ls:*)",
      "Bash(npx @modelcontextprotocol/server-supabase describe-table wishlist)",
      "Bash(npx:*)",
      "Bash(supabase:*)",
      "Bash(dos2unix:*)",
      "Bash(mcp run:*)",
      "mcp__supabase__list_projects",
      "Bash(flutter pub:*)",
      "mcp__supabase__get_logs",
      "mcp__supabase__deploy_edge_function",
      "mcp__supabase__list_edge_functions",
      "WebSearch",
      "mcp__supabase__search_docs",
      "mcp__supabase__get_project",
      "Bash(npm install:*)",
      "mcp__dart__connect_dart_tooling_daemon",
      "mcp__dart__hot_reload",
      "mcp__dart__get_selected_widget",
      "Bash(flutter run:*)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "mcp__dart__get_runtime_errors",
      "Bash(flutter build:*)",
      "mcp__ide__executeCode",
      "Bash(dart:*)",
      "Bash(flutter:*)",
      "Bash(r)",
      "mcp__dart__get_widget_tree",
      "Bash(grep:*)",
      "mcp__dart__analyze_files",
      "mcp__dart__add_roots",
      "mcp__dart__dart_format",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --index-filter \"git rm --cached --ignore-unmatch supabase/functions/.env.temp\" --prune-empty --tag-name-filter cat -- --all)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase"
  ]
}